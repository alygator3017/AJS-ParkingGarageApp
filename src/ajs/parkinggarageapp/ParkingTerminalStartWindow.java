package ajs.parkinggarageapp;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Set;
import java.util.Vector;
import javax.swing.JFrame;

/**
 * Start Window that acts as an AI, allowing us to "pretend" being a person
 * parking a car. Allows user to choose whether to enter or exit parking garage.
 * Also allows user to choose which car they are. Hopefully the list reset works
 * >.>
 *
 * @author ajSchmidt-Zimmel
 * @version 1.2
 */
public class ParkingTerminalStartWindow extends javax.swing.JFrame {

    private final JFrame garageWindow;
    private final File file;
    private final String garageName;
    private final OutputService receiptOutput;
    private final OutputService salesReportOutput;
    private final FeeCalculator feeCalculator;
    private final ParkingTerminal terminal;
    private final CarCatalog carCatalog;
    private final Vector<Integer> carIDs = new Vector<>();

    /**
     * Creates new form ParkingTerminalStartForm
     *
     * @param garageWindow The garage window.
     * @param garageName The name of the garage.
     * @param receiptOutput
     * @param terminal Parking terminal.
     * @param salesReportOutput
     * @param feeCalc The fee calculator strategy.
     * @param file The file. 
     * @param carCatalog The car catalog.
     * @throws java.io.IOException
     * @throws java.io.FileNotFoundException
     * @throws ajs.parkinggarageapp.NullOrEmptyArgumentException
     */
    public ParkingTerminalStartWindow(JFrame garageWindow,
            String garageName, OutputService receiptOutput, ParkingTerminal terminal, OutputService salesReportOutput, FeeCalculator feeCalc, File file, CarCatalog carCatalog) throws IOException, FileNotFoundException, NullOrEmptyArgumentException {
        this.garageWindow = garageWindow;
        this.carCatalog = carCatalog;
        Set<Integer> keys = carCatalog.getCarList().keySet();
        if (keys.size() <= 0) {
            carIDs.add(0);
        } else {
            carIDs.clear();
            for (Integer k : keys) {
                carIDs.add(k);
            }
        }
        initComponents();
        this.file = file;
        this.garageName = garageName;
        this.receiptOutput = receiptOutput;
        this.salesReportOutput = salesReportOutput;
        this.feeCalculator = feeCalc;

        this.terminal = terminal;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backButton = new javax.swing.JButton();
        dispenserTerminalButton = new javax.swing.JButton();
        exitTerminalButton = new javax.swing.JButton();
        carIdComboBox = new javax.swing.JComboBox(carIDs);
        carIDLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        backButton.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        backButton.setText("Back to Garage Owner Page");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        dispenserTerminalButton.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        dispenserTerminalButton.setText("Check In New Car");
        dispenserTerminalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dispenserTerminalButtonActionPerformed(evt);
            }
        });

        exitTerminalButton.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        exitTerminalButton.setText("Check Out Car");
        exitTerminalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitTerminalButtonActionPerformed(evt);
            }
        });

        carIdComboBox.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        carIDLabel.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        carIDLabel.setText("Car To Check Out: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dispenserTerminalButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(exitTerminalButton)
                        .addGap(38, 38, 38))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(carIDLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(carIdComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(backButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(carIdComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(carIDLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exitTerminalButton)
                    .addComponent(dispenserTerminalButton))
                .addGap(56, 56, 56)
                .addComponent(backButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
     * To Exit Terminal Window Button. Takes user to Exit terminal after having
     * chosen a car to check out.
     *
     * @param evt
     */
    private void exitTerminalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitTerminalButtonActionPerformed
        int selected = 0;
        if (carIdComboBox.getSelectedItem() == null) {
            selected = 0;
        } else {
            selected = Integer.parseInt(carIdComboBox.getSelectedItem().toString());
        }
//        System.out.println(selected);
        ErrorWindow error = null;
        if (selected == 0) {

            try {
                error = new ErrorWindow(this, "No Cars Are In The Garage entered");
            } catch (NullOrEmptyArgumentException ex) {
                //endless try catch problem again here.
                System.out.println(ex);
            }
            error.setVisible(true);
            this.setVisible(false);

        } else {
            int id = selected;

            ParkingTerminalExitWindow exit = new ParkingTerminalExitWindow(garageWindow, garageName,
                    terminal, receiptOutput, salesReportOutput, feeCalculator, file, selected, carCatalog);

            exit.setVisible(true);
            this.setVisible(false);
        }
    }//GEN-LAST:event_exitTerminalButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        garageWindow.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_backButtonActionPerformed

    private void dispenserTerminalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispenserTerminalButtonActionPerformed
        ParkingTerminalEnterWindow enter = new ParkingTerminalEnterWindow(garageWindow, garageName,
                terminal, receiptOutput, salesReportOutput, feeCalculator, file, carCatalog);
        enter.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_dispenserTerminalButtonActionPerformed


    /**
     * Resets the car catalog box to update every time the window is loaded.
     */
    public final void resetCarCatalogComboBox() {
        carIdComboBox.removeAllItems();
        carIDs.clear();
        carCatalog.getCarList().clear();
        Set<Integer> keys = carCatalog.getCarList().keySet();
        if (keys.size() <= 0) {
            carIDs.add(0);
        } else {
            carIDs.clear();
            for (Integer k : keys) {
                carIDs.add(k);
            }
        }

    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel carIDLabel;
    private javax.swing.JComboBox carIdComboBox;
    private javax.swing.JButton dispenserTerminalButton;
    private javax.swing.JButton exitTerminalButton;
    // End of variables declaration//GEN-END:variables
}
